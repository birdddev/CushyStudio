"use strict";(self.webpackChunksite=self.webpackChunksite||[]).push([[5246],{6971:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>i});var s=o(5893),n=o(1151);const r={},c="mobx rules we should try to follow",a={id:"codebase/mobx",title:"mobx rules we should try to follow",description:"-   override some lazy getters (getFile, getOrCreateInstance, ...) with action instead of autoaction",source:"@site/docs/codebase/mobx.mdx",sourceDirName:"codebase",slug:"/codebase/mobx",permalink:"/docs/codebase/mobx",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar",previous:{title:"adding new components",permalink:"/docs/codebase/components"},next:{title:"Practical Shell Aliases",permalink:"/docs/codebase/useful-aliases"}},l={},i=[];function d(e){const t={code:"code",h1:"h1",li:"li",ul:"ul",...(0,n.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"mobx-rules-we-should-try-to-follow",children:"mobx rules we should try to follow"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["override some lazy getters (getFile, getOrCreateInstance, ...) with ",(0,s.jsx)(t.code,{children:"action"})," instead of ",(0,s.jsx)(t.code,{children:"autoaction"})]}),"\n",(0,s.jsx)(t.li,{children:"react refs stored in state classes must be declared as non observable or observable refs unless necessary"}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,n.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,o)=>{o.d(t,{Z:()=>a,a:()=>c});var s=o(7294);const n={},r=s.createContext(n);function c(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);